#!/bin/zsh

args=("$@");

should_show_version() {
    if [[ ! -z "$SHOW_ZIG" ]]; then
        return 0;
    fi
    if [[ "${#args[@]}" -eq 0 ]] || [[ "${args[1]}" == "help" ]]; then
        return 0;
    fi
    return 1;
}
function strip_prefix() {
    echo "$1" | sed "s#$HOME#~#";
}
attempt_exec() {
    #echo "DEBUG: exec($1 ; ${args[@]})";
    if [[ -x "$1" ]]; then
        if [[ -z "$2" ]]; then
            comment="";
        else
            comment=" $2";
        fi
        if should_show_version "$1"; then
            echo "Found$comment zig "$($1 version)" in $(strip_prefix "$(realpath -s $1)")" >&2;
        fi
        exec $1 "${args[@]}";
    fi
}

attempt_exec "$HOME/git/zig/builds/safe/bin/zig";
attempt_exec "$HOME/git/zig/builds/release/bin/zig";
attempt_exec "/opt/zig/bin/zig";

# https://unix.stackexchange.com/a/710369
system_zigs=("${(@f)$(which -a zig)}")

if [[ "${system_zigs[1]}" != "$0" ]]; then
    echo "Expected this script ($0) to come first on path: ${system_zigs[1]}"
    exit 1;
elif [[ "${#system_zigs[@]}" -lt 2 ]]; then
    echo "Unable to find `zig` executable on PATH" >&2;
    exit 1;
fi

attempt_exec "${system_zigs[2]}" "system";
